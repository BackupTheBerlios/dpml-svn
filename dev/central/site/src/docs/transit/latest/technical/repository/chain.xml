<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Transit</title>
  </properties> 

  <body>
    <section name="Classloader Chain Creation">

        <p>
        A classloader chain is a sequence of classloaders that are created 
        by Transit using a meta descriptor file.  The descriptor contains 
        the declaration of api, spi and implementation classloader jar files.
        Each set of jar file entries represent the content of the respective
        classloader.  Entries are declared in the form of an artifact uri.
        The classloader chain parent is supplied as an argument to the 
        <a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/Repository.html">
        Repository</a> service interface and establishes the parent
        classloader for the API classloader.  The API classloader serves as the 
        parent to the SPI classloader which in turn serves as the parent to the IMPL
        classloader. 
        </p>

        <img src="/images/transit/@TRANSIT-BUILD-ID@/chain.png"/>

        <p><i>Example classloader creation:</i></p>
        <pre>
Repository repository = new <a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/StandardLoader.html">StandardLoader()</a>;
ClassLoader parent = getClass().getClassLoader();
URI uri = new URI( "@METRO-PLUGIN-URI@" );
ClassLoader classloader = repository.getPluginClassLoader( parent, uri );
....
        </pre>

    </section>

  </body>

</document>
