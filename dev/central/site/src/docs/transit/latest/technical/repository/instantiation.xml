<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Transit</title>
  </properties> 

  <body>
    <section name="Plugin Instantiation">

        <p>
        The <a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/Repository.html">
        Repository</a> service provides a generic plugin instantiation service. The service is typically
        used by applications that know more about the type of plugins that are loaded than Transit does.
        As such, the plugin instantiation service should be viewed as a convinience function.
        </p>

        <p>
        The plugin instantiation function takes the usual parent classloader and uri arguments and 
        adds an object array argument.  The object array is an optional set of arguments values that
        will be used by the repository service when attempting to resolve plugin constructor parameter
        arguments.
        </p>

        <p><i>Example plugin instantiation:</i></p>
        <pre>
Repository repository = new <a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/StandardLoader.html">StandardLoader()</a>;
ClassLoader parent = getClass().getClassLoader();
URI uri = new URI( "@METRO-PLUGIN-URI@" );
String[] args = new String[]{ "-debug", "-audit" ); // simulate cli args
Object[] params = new Object[]{ args };
Object plugin = repository.getPlugin( parent, uri, params );
....
        </pre>

      <subsection name="Constructor Selection and Instantiation">

         <p>
         The default implementation takes the fist public constructor declared by the plugin.
         For predictive behaviour it is recommended to use a single public constructor as constructor
         ordering is not assured by the JVM. The parameters declared by the constructor will be
         evaluated against the supplied object array values and if type compatible, the supplied value
         will be assigned as the parameter argument.  If the constructor has any unresolved parameters, 
         the implementation will attempt to fullfill these using repository suppled values.
         </p>

         <p>
         The following argument types will be supplied by the repository implementation if the value
         is declared as a constructor parameter and the parameter is unresolved following assessment 
         of the supplied arguments.
         </p>

         <table>
           <tr><th>Type</th><th>Description</th></tr>
           <tr><td><a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/Plugin.html">Plugin</a></td><td>The plugin descriptor.</td></tr>
           <tr><td>ClassLoader</td><td>The implementation classloader.</td></tr>
           <tr><td><a href="@TRANSIT-DOCS-PATH@/net/dpml/transit/repository/Repository.html">Repository</a></td><td>The repository used to establish the plugin.</td></tr>
           <tr><td>[]</td><td>An array of any kind that is unresolved will be assigned an empty array value.</td></tr>
         </table>

         <p>
         On completion of construction parameter population and instance of the class is creating 
         using the selected constructor.  No lifecycle processing is applied to the resulting instance.
         </p>

      </subsection>

    </section>
  </body>
</document>
