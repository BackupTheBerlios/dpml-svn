<?xml version="1.0"?>

<!-- 
 Copyright 2004 Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.dpml.net/central/about/legal/
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
 
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Guide</title>
  </properties> 

  <body>
    <section name="Integration Testing">

        <p>
        The Metro platform provides an abstract test case class that you
        can use as a component factory.  To create a Metro based unit
        test you simply extend MetroTestCase.
        </p>

        <p>
        The following code fragment declares a new test case using the 
        abstract Metro test case.
        </p>
        <source>
import net.dpml.metro.unit.MetroTestCase;

public class ExampleTestCase extends MetroTestCase
{
    public ExampleTestCase( String name )
    {
        super( name );
    }

    // ...
}
        </source>
        <p>
        You can now access components established by Metro via 
        the component path.  For example, if your block.xml defines
        a component named "hello" in a container named "test" you 
        access the component by requesting the path "/test/hello".  
        </p>
        <p>
        The following code fragment demonstrates the usage of the 
        resolve method to locate a named component.
        </p>
<source><![CDATA[
public void testServiceResolution() throws Exception
{
    Hello hello = (Hello) super.resolve( "/test/hello" );
    assertNotHull( "hello", hello );
}
]]></source>

        <p>
        You can customize all of the deployment and runtime parameters
        of the embedded metro instance by adding a "dpml.properties"
        file to your basedir.
        </p>
    </section>
  </body>

</document>




