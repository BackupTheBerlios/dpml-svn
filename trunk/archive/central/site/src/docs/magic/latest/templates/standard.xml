<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Magic</title>
  </properties> 

  <body>

    <section name="Standard Template">

      <p>
      The standard template is used as the main template for building 
      a single project.
      </p>

      <subsection name="Task Declarations">

        <p>The standard template contains the following target declarations.</p>

        <table>
          <tr>
            <th>Target</th>
            <th>Dependency</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>info</td>
            <td></td>
            <td>List the project name indicating the start of the build.</td>
          </tr>
          <tr>
            <td>init</td>
            <td>info</td>
            <td>Loads any plugins declared by the project.</td>
          </tr>
          <tr>
            <td>clean</td>
            <td>info</td>
            <td>Removes the ${basedir}/target directory.</td>
          </tr>
          <tr>
            <td>prepare</td>
            <td>init</td>
            <td>Copies the contents of ${basedir}/src and ${basedir}/etc to 
            the ${basedir}/target/build directory applying filtering during the 
            copy operation.</td>
          </tr>
          <tr>
            <td>build</td>
            <td>prepare</td>
            <td>Compiles source in ${basedir}/target/build/main to classes under the ${basedir}/target/classes directory.</td>
          </tr>
          <tr>
            <td>package</td>
            <td>build</td>
            <td>Creates a jar file under 
                ${basedir}/target/deliverables/jars/${project.name}-${project.version}.jar 
                using the classes under ${basedir}/target/classes.</td>
          </tr>
          <tr>
            <td>test</td>
            <td>package</td>
            <td>Invokes unit testing using a classloader creating using test time dependencies
            declared by project together with the produced jar file and compiled test classes.</td>
          </tr>
          <tr>
            <td>install</td>
            <td>test</td>
            <td>Copies the contents of the ${basedir}/target/deliverables directory to 
              ${dpml.cache}/${project.group}.</td>
          </tr>
        </table>

    </subsection>

    <subsection name="Template Listing">
<source>
<![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>

<project name="standard"
    xmlns:transit="antlib:net.dpml.transit"
    xmlns:x="plugin:dpml/magic/dpml-magic-core">

  <transit:init>
    <map urn="plugin:dpml/magic/dpml-magic-core"
       uri="artifact:plugin:dpml/magic/dpml-magic-core#SNAPSHOT"/>
  </transit:init>

  <target name="info" description="List the project key.">
    <x:info/>
  </target>

  <target name="init" depends="info" description="Initialize build listeners.">
    <x:init/>
  </target>

  <target name="clean" depends="info" description="Clean the target directory.">
    <x:clean/>
  </target>

  <target name="prepare" depends="init" description="Prepare sources for build.">
    <x:prepare/>
  </target>

  <target name="build" depends="prepare" description="Build source content.">
    <x:javac/>
  </target>

  <target name="package" depends="build" description="Package build content.">
    <x:jar/>
  </target>

  <target name="test" depends="package" description="Test packaged content.">
    <x:junit/>
  </target>

  <target name="install" depends="test" description="Install package to local cache.">
    <x:install/>
  </target>

  <target name="javadoc" depends="prepare">
    <x:javadoc title="${project.name}">
      <link href="http://java.sun.com/j2se/1.4/docs/api" />
      <link href="http://www.dpml.net/asf/ant/docs/1.6.2" />
    </x:javadoc>
  </target>

  <target name="checkstyle" depends="prepare" unless="project.checkstyle.disable"
      description="Create a checkstyle report.">
    <property name="project.checkstyle.dest" value="target/checkstyle"/>
    <property name="project.checkstyle.format" value="artifact:format:dpml/magic/dpml"/>
    <property name="project.checkstyle.reports" value="target/reports/checkstyle"/>
    <mkdir dir="${project.checkstyle.dest}"/>
    <x:checkstyle uri="${project.checkstyle.format}">
      <formatter type="xml" toFile="${project.checkstyle.dest}/checkstyle_errors.xml"/>
    </x:checkstyle>
    <mkdir dir="${project.checkstyle.reports}"/>
    <x:style style="artifact:xsl:dpml/magic/checkstyle-frames"
        in="${project.checkstyle.dest}/checkstyle_errors.xml"
        out="${project.checkstyle.reports}/checkstyle_report.html" />
  </target>

</project>
]]></source>

      </subsection>

    </section>

  </body>

</document>

