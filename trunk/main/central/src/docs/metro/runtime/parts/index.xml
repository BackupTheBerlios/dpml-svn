<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Metro Parts</title>
  </properties> 

  <body>

    <section name="Parts">

      <p>
      A component part associates a component profile with a 
      supporting controller.  The profile provides a description of the 
      state of usage of a component type.  It is represented by a collections of 
      serializable (and encodable) classes commonly referred to as directives.  
      </p>

      <subsection name="Part Datastructure">

      <p>
      A component part datastructure is maintained as an encoded 
      <a href="/api/dpml/@VERSION@/net/dpml/metro/part/Part.html"><tt>Part</tt></a>.  
      The datastructure contains the following fields:
      </p>

      <ol>
        <li>controller implementation artifact uri</li>
        <li>optional properties</li>
        <li>a directive datastructure readable by the controller implementation</li>
      </ol>

      <p>
      Loading of a part occurs as a two-phase process.  The first phase involves 
      decoding of the <tt>Part</tt> independently of a controller.  This enables 
      the resolution of the part controller uri and associated properties. If the 
      controller associated with the part is not compatible with the controller 
      executing the request the executing controller will establish the requested
      controller using underlying plugin machinery and delegate secondary phase 
      loading to the foreign controller.
      </p>

      </subsection>

      <subsection name="Component Directives">

      <p>
      The default component directive is the <tt>net.dpml.metro.data.ComponentDirective</tt> class.
      The <tt>ComponentDirective</tt> contains information about the component  
      classname (from which the component <a href="../types.html">type</a> 
      can be resolved), a name that identifies the component within the scope of 
      its parent, and a series of directives that deal with component 
      configuration including the assignment of context entry values
      and/or instructions to a container concerning value fullfillment.
      </p>

      <table>

        <tr>
          <th>Directive</th><th>Description</th>
        </tr>

        <tr>
          <td><a href="/api/dpml/@VERSION@/net/dpml/metro/data/ComponentDirective.html">
            ComponentDirective</a></td>
          <td>
            The <tt>ComponentDirective</tt> class identifies the component
            via a scoped name.  It asserts an 
            <a href="activation.html">activation</a> 
            policy that is used by the runtime during deployment phases. It
            contains overloaded state enabling customization of type 
            <a href="collection.html">collection</a> and
            <a href="lifestyle.html">lifestyle</a> policies and 
            aggregates a set of directives dealing with a number of different 
            component configuration concerns.
          </td>
        </tr>
        <tr>
          <td>
            <a href="/api/dpml/@VERSION@/net/dpml/metro/data/ClassLoaderDirective.html">
              ClassLoaderDirective</a></td>
          <td>
            The <tt>ClassLoaderDirective</tt> describes a classloader stack composed 
            of a series of classloader <a href="categories.html">categories</a>.  Each 
            category references a collection of jar files via artifact references.
          </td>
        </tr>
        <tr>
          <td>
            <a href="/api/dpml/@VERSION@/net/dpml/metro/data/CategoryDirective.html">
              CategoryDirective</a></td>
          <td>
            Enables the assignment of logging channel priorities and target
            associations.
          </td>
        </tr>
        <tr>
          <td>
            <a href="/api/dpml/@VERSION@/net/dpml/metro/info/ContextDirective.html">
              ContextDirective</a></td>
          <td>
            Contains the binding of entry keys with values directives and/or
            value resolution instructions that are used by the runtime to 
            ensure clean and complete context fullfillment.
          </td>
        </tr>
        <tr>
          <td>
            <a href="/api/dpml/@VERSION@/net/dpml/parameters/Parameters.html">
              Parameters</a></td>
          <td>
            Convinient association of named values pairs that can be used 
            as an immutable component constructor argument.
          </td>
        </tr>
        <tr>
          <td>
            <a href="/api/dpml/@VERSION@/net/dpml/configuration/Configuration.html">
              Configuration</a></td>
          <td>
            A simple and easy to use representation of an XML document suitable
            for supply to a component as a constructor argument.
          </td>
        </tr>
      </table>

      </subsection>

      <subsection name="Component Profile Creation">

        <p>
        A <a href="../../tasks/components/index.html">component</a> Ant Task handles the 
        construction of externalized part artifacts based on a combination
        of component type evaluation and information supplied under task attributes
        and nested element.  Once created as an external artifact the part is network
        resolvable and may be easily referenced by application handlers or by 
        components as part of a composite component implementation strategy.
        </p>

      </subsection>

      <subsection name="Technical Note">

        <p>
        Under the currrent implementation part properties are not evaluated.  The principal
        purpose of the properties field is to support a degree of flexibility when dealing 
        with future implementations of the Metro system.  As such, users should assume that
        property names commencing with <tt>dpml</tt> are reserved for future use by the 
        DPML.
        </p>

      </subsection>

    </section>

  </body>

</document>



