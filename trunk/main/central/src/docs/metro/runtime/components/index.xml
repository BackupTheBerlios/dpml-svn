<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Metro</title>
  </properties> 

  <body>

    <section name="Components">

      <p>
      A <tt>Component</tt> is a remotly reachable object that 
      that is established using a data <tt>Model</tt>. Component
      and model implementations are established via a <tt>Controller</tt>.
      Identified by a <tt>part</tt> datastructure.  As such different
      component implementations may coexist within a complex deployment 
      graph.  All components implement the common
      <a href="/api/dpml/@VERSION@/net/dpml/metro/part/Component.html">Component</a>
      interface dealing with:
      </p>

      <ul>
        <li>activation: handles assembly of the component</li>
        <li>lookup: used for resolving potential service providers during assembly</li>
        <li>instance: access to runtime service providers</li>
      </ul>


      <subsection name="ComponentHandler">

        <p>
        The <tt>net.dpml.metro.runtime.ComponentHandler</tt> class is the default implementation
        of the <tt>Component</tt> interface.  It is supplied by the <tt>Controller</tt> with an 
        instance of <tt>net.dpml.metro.runtime.ComponentModel</tt> which is a remotly accessible 
        object that aggregates the information with a component <tt>type</tt> and <tt>part</tt>
        deployment directive (i.e. the aggregation of the criteria and the solution).
        </p>

        <p>
        Following the separation of model and control concerns, the <tt>ComponentHandler</tt> has 
        as associated class controller to which a majority of functional concerns are delegated.
        This controller deals with the establishment of the lifestyle handler taking into account
        the lifestyle and collection policies associated with the asssociated <tt>ComponentModel</tt>.  
        The <tt>ComponentHandler</tt> maintains a map of objects implmenting the 
        <tt>net.dpml.metro.part.Instance</tt> interface.  This map representes the collection of 
        runtime service providers bound to the type/part combination. 
        </p>

      </subsection>

      <subsection name="Handler Configuration">

        <p>
        Creation of a new <tt>ComponentHandler</tt> is handled exclusively by the top-level
        <a href="../controller/index.html">controller</a>.  An instance may be via a reference 
        to a network accessible part, or alternatively via a reference to a remote model. An 
        example of a management system leveraging model-based creation is the 
        <a href="../../station/index.html">Station Manager</a>.  Configuration data is established
        relative to the type and deployment profile and potentially modified by the station 
        using the Station CLI handler.
        </p>


      </subsection>

    </section>

  </body>

</document>

