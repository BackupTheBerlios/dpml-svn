<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Metro</title>
  </properties> 

  <body>

    <section name="Metro Runtime">

      <subsection name="Parts and Types">

        <p>
        A <tt>part</tt> is a network accessible datatype
        that associates a controller within a component deployment profile. The 
        deloyment profile references a component type.  The component type may
        be implementated using a collection of local or remote component parts.  
        </p>

        <ul>
          <li>
            <a href="types/index.html">type:</a> 
            located under a &lt;classname&gt;.type - a serializable datatype 
            containing information about a component class including characteristics 
            such as the services provided by the component, the context 
            assumptions asserted by the implementation, logging assumptions
            and defaults, etc.  A type may also contain an implemention description
            in the form of a collection of internal parts.  This information is cached 
            under the <tt>.type</tt> resource (an XML document encoded to JSR-57) for 
            use by deployment tools and the runtime system.
          </li>
          <li>
            <a href="parts/index.html">part:</a> 
            a standalone component definition referencable via the <tt>artifact</tt>
            uri using the <tt>part</tt> type identifier.  The part definition contains 
            the default deployment profile for a component including the definition of 
            the component inital context, dependency solutions, and any related 
            configuration information.  The <tt>part</tt> serves as the initial data 
            used to establish a component model.
          </li>
        </ul>

      </subsection>

      <subsection name="Components and Instances">

        <p>
        Using a network accessible <a href="parts/index.html">part</a>, the Metro 
        runtime provides support for the creation of a <tt>Component</tt>.  
        The <tt>Component</tt> handles scopped requests for locating service 
        providers and establishment of managed <tt>Instance</tt>(s).
        </p>

        <ul>
          <li>controller: general utility to construct directives from network  
              accessible resources and handles creation of locally or remotely managed 
              components.</li>
          <li>component: encapsulates a deployment configuration applied to a
              component type.  Uses an associated lifestyle policy to control establishment
              of managed instances.</li>
          <li>instance: handles provider establishment, runtime state management, and 
              provider decommissioning.</li>
        </ul>

      </subsection>

      <subsection name="Example">
      
        <p>
        The following snipet of code demonstrates the creation of a component:
        </p>

        <pre>
Controller controller = Controller.STANDARD;
URI uri = new URI( "artifact:part:acme/acme-widget#1.1" );
Component component = controller.getComponent( uri );
Instance instance = component.getInstance();
Widget widget = (Widget) instance.getValue( true );
        </pre>

      </subsection>

    </section>

  </body>

</document>

