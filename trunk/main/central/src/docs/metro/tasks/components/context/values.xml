<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Metro Value Datatype</title>
  </properties> 

  <body>

    <section name="Value">

      <subsection name="Description">

        <p>
        In-line construction of an entry or value constructor
        or invocation argument.  In other words - value directives 
        allow for the creation of target objects that can be used as 
        class constructor values or operation arguments to an enclosing 
        value or entry.
        </p>

      </subsection>
      
      <subsection name="Entry Attributes">

        <table>
          <tr>
            <td><tt>class</tt></td>
            <td>Optional declaration of a classname to be instantiated using
              any enclosed values. The default class value is 
              <tt>java.lang.String</tt>.</td>
          </tr>
          <tr>
            <td><tt>method</tt></td>
            <td>
              Optional declaration of the method to invoke on the target 
              object established by the class attribute. The default 
              method value is the keyword <tt>new</tt> used within bean
              expression construction.  If the method name references a 
              static field the filed value will be used to establish the 
              target object.</td>
          </tr>
          <tr>
            <td><tt>value</tt></td>
            <td>
              Optional declaration of string value used as a constructor
              or operation argument. May not be used in in conjunction with 
              nested <tt>value</tt> attributes.</td>
          </tr>
        </table>

      </subsection>

      <subsection name="Nested Elements">

        <table>
          <tr>
            <td><tt><a href="values.html">value</a></tt></td>
            <td>The value element may contain 0..n nested &lt;value&gt; directives.
              If the value class is an array class the nested values are 
              interprited as array entries otherwise nested values are interprited 
              as constructor parameter values. Nested values may not be used in 
              conjuntion with the <tt>value</tt> attribute.</td>
          </tr>
        </table>

      </subsection>

    </section>

    <section name="Example">

      <subsection name="Simple Value Example">

        <p>
          Simple <tt>java.lang.String</tt> value assignment:
        </p>

<pre><![CDATA[
<value value="Hello"/>
]]></pre>

      </subsection>

      <subsection name="Static Field Example">

        <p>
          Example of the creation of a value referencing 
          a static method.  In the following example a value is constructed
          using a static field <tt>BLUE</tt> on the class <tt>java.awt.Color</tt>.
        </p>

<pre><![CDATA[
<value class="java.awt.Color" method="RED"/>
]]></pre>

      </subsection>

      <subsection name="Constructor Example">

        <p>
          Example of the creation of an instance of <tt>java.awt.Color</tt> 
          using a set of nested primitive values.
        </p>

<pre><![CDATA[
<value class="java.awt.Color">
  <value class="float" value="100"/>
  <value class="float" value="200"/>
  <value class="float" value="0"/>
</value>
]]></pre>

      </subsection>

    </section>

  </body>

</document>


