<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Metro Configuration Datatype</title>
  </properties> 

  <body>

    <section name="Configuration">

      <subsection name="Description">

        <p>
        Declaration of a default arbitary XML configuration within the component
        directive.
        </p>

      </subsection>
      
      <subsection name="Attributes">

        <p>The configuration element supports any user defined
         attribute or element value.</p>

      </subsection>

      <subsection name="Nested Elements">

        <p>Any user defined nested element is allowed.</p>

      </subsection>

    </section>

    <section name="Example">

      <p>
      The following example demonstrates the creation of an arbitary 
      XML configuration directive.  The configuration element supports 
      any user supplied attribute and any user supplied element name.
      </p>

<pre><![CDATA[
<component xmlns="dpml:metro" dest="target/test/config.part" test="true" activation="true"
    type="net.dpml.test.config.ConfigurableComponent" collection="hard">
  <configuration name="fred">
    <place>Cafe d'Orleans</place>
    <item name="breakfast" value="Cafe et Crossant"/>
    <item name="lunch" value="Salade de Sud-Oust"/>
    <item name="dinner" value="Margret de Canard"/>
  </configuration>
</component>
]]></pre>

    </section>

    <section name="Technical Notes">

      <p>
        The declaration of a configuration presumes that the component implementation
        declares a constructor argument that is type assignable to an instance of 
        <a href="/api/metro/@VERSION@/net/dpml/configuration/Configuration.html">Configuration</a>
        (a.k.a. the classic Avalon style configuration object).
      </p>

<pre><![CDATA[
public class ConfigurableComponent
{
    private final Configuration m_config;

    public ConfigurableComponent( Configuration config )
    {
        m_config = config;
    }
    
    ...
}]]></pre>
      

    </section>

  </body>

</document>
