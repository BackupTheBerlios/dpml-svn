<?xml version="1.0" encoding="UTF-8"?>
<document>

  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Depot</title>
  </properties>

  <body>
    <section name="Reactor Task">
      <p>
      The reactor task invokes an ant target on the set of project defintions
      that declare base directories within the basedir of the reactor.  This
      allows for the building of groups of projects based on the directory
      structure.  The sequence of the project build is automatically resolved
      relative to the dependencies defined by the respective projects.
      </p>

      <subsection name="Tutorial">

        <table>
          <tr>
            <td><img src="/images/info.gif"/></td>
            <td><i>The <a href="http://www.osm.net/training/tooling/example.html">
               OSM Development Tooling Getting Started Tutorial</a> demonstrates the 
               setup of a top-level reactor build using the reactor template.
               The <a href="http://www.osm.net/training/tooling/module.html">
               Module Tutorial</a> demonstrates the direct 
               invocation of the reactor task within a standard build file.</i>
            </td>
          </tr>
        </table>

      </subsection>

      <subsection name="Usage">

      <p><i>Normal task usage:</i></p>

<source><![CDATA[
    <x:reactor/>
]]></source>

      <p><i>Supplying an explicit build target:</i></p>

<source><![CDATA[
    <x:reactor target="install"/>
]]></source>

      <p><i>
       Example output when invoking the reactor from the root
       dpml directory:</i></p>

<pre>
default:
[x:reactor] Preparing build sequence.
------------------------------------------------------------------------
[artifact:jar:dpml/metro/public/dpml-service-api#SNAPSHOT]
[artifact:jar:dpml/metro/public/dpml-configuration-api#SNAPSHOT]
[artifact:jar:dpml/metro/public/dpml-parameters-api#SNAPSHOT]
[artifact:jar:dpml/metro/private/dpml-parameters-impl#SNAPSHOT]
[artifact:jar:dpml/metro/private/dpml-configuration-impl#SNAPSHOT]
[artifact:jar:dpml/util/dpml-util-i18n#SNAPSHOT]
....

</pre>
      </subsection>

    </section>
    <section name="Properties">
      
      <p>
      The following properties are used to set the handling of subproject test failures/errors.
      </p>

      <table>
        <tr><th>Property</th><th>Default value</th><th>Description</th></tr>
        <tr>
          <td>${reactor.test.halt-on-failure}</td>
          <td>true</td>
          <td>Setting this to false will result in a successful build even if subprojects had test failures.
			if any subprojects had failures, the property ${reactor.test.failures} will be set to "true" on
			the reactor project.
		  </td>
        </tr>
        <tr>
          <td>${reactor.test.halt-on-errors}</td>
          <td>true</td>
          <td>Setting this to false will result in a successful build even if subprojects had test errors.
			if any subprojects had failures, the property ${reactor.test.errors} will be set to "true" on
			the reactor project.
		  </td>
        </tr>
	  </table>
	  <p>
		This enables you to exacute the whole build, collect the test reports etc and then in the top level reactor project
		do something like:
		<source><![CDATA[
		<target name="test-for-errors" depends="install">
			<echo>${reactor.test.errors}</echo>
			<echo>${reactor.test.failures}</echo>
	  		<fail message="some subproject had test errors">
			<condition>
				<not>
		 			<isset property="${reactor.test.errors}"/>
				</not>
			</condition>
	   		</fail>
		</target>
		]]></source>
		</p>
     </section>
  </body>

</document>

