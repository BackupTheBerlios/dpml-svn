<?xml version="1.0"?>
<configuration xmlns="@PROJECT-XSD-URI@"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:this="@PROJECT-XSD-URI@"> 

  <!-- client products -->
  
  <dir name="src.main" path="${project.src.main.dir}">
    <description title="Project main source directory.">
    Project source for primary content to be added to the 
    normalized ${target.build.main.dir} directory.
    </description>
  </dir>
  
  <dir name="src.test" path="${project.src.test.dir}">
    <description title="Project test source directory.">
    Project source for test content to be added to the 
    normalized ${target.build.test.dir} directory.
    </description>
  </dir>
  
  <dir name="etc.main" path="${project.etc.main.dir}">
    <description title="Project supplimentary main content directory.">
    Project source for supplimentary content to be added to the 
    normalized ${target.build.main.dir} directory.
    </description>
  </dir>
  
  <dir name="etc.test" path="${project.etc.test.dir}">
    <description title="Project supplimentary test content directory.">
    Project source for supplimentary test content to be added to the 
    normalized ${target.build.test.dir} directory.
    </description>
  </dir>
  
  <!-- normalized products -->
  
  <dir name="target.dir" path="${project.basedir}/target"/>
  <dir name="target.test.dir" path="${target.dir}/test"/>
  <dir name="target.reports.dir" path="${target.dir}/reports"/>
  <dir name="target.reports.test.dir" path="${target.reports.dir}/test"/>
  
  <dir name="target.build.dir" path="${target.dir}/build"/>
  <dir name="target.build.main.dir" path="${target.build.dir}/main"/>
  <dir name="target.build.test.dir" path="${target.build.dir}/test"/>
  
  <dir name="target.classes.dir" path="${target.dir}/classes"/>
  <dir name="target.classes.main.dir" path="${target.classes.dir}/main"/>
  <dir name="target.classes.test.dir" path="${target.classes.dir}/test"/>
  
  <file name="target.deliverables.jar" type="jar"/>
  <file name="target.deliverables.part" type="part"/>
  
  <!-- processes -->
  
  <process name="prepare-main" class="net.dpml.tools.process.PrepareMainProcess">
    <consumes>
      <input xsi:type="Selection" id="etc.main" filtering="false">
        <include name="**/*.exe,**/*.jar*,**/*.dll,**/*.gif,**/*.jpeg,**/*.jpg,**/*.ico,**/*.png,**/*.keystore"/>
      </input>
      <input xsi:type="Selection" id="etc.main" filtering="true">
        <exclude name="**/*.exe,**/*.jar*,**/*.dll,**/*.gif,**/*.jpeg,**/*.jpg,**/*.ico,**/*.png,**/*.keystore"/>
      </input>
    </consumes>
    <produces id="target.build.main.dir"/>
  </process>
  
  <process name="prepare-test" class="net.dpml.tools.process.PrepareTestProcess">
    <consumes policy="conditional">
      <input id="target.build.main.dir"/>
      <input id="src.test" policy="optional"/>
    </consumes>
    <produces id="target.build.test.dir"/>
  </process>
  
  <process name="compile-main" class="net.dpml.tools.process.CompileMainProcess" implicit="true">
    <consumes>
      <input id="target.build.main.dir" policy="conditional"/>
    </consumes>
    <produces id="target.classes.main.dir"/>
  </process>
  
  <process name="compile-test" class="net.dpml.tools.process.CompileTestProcess" implicit="true">
    <consumes>
      <input id="target.classes.main.dir"/>
      <input id="target.build.test.dir" policy="conditional"/>
    </consumes>
    <produces id="target.classes.test.dir"/>
  </process>
  
  <process name="prepare-junit" class="net.dpml.tools.process.PrepareJUnitProcess">
    <dependencies>
      <include id="prepare-test"/>
    </dependencies>
    <consumes policy="conditional">
      <input id="etc.test"/>
    </consumes>
    <produces id="target.test.dir"/>
  </process>
  
  <process name="junit" class="net.dpml.tools.process.JunitProcess">
    <dependencies>
      <include id="prepare-junit"/>
      <include id="compile-test"/>
    </dependencies>
    <consumes>
      <input id="target.test.dir"/>
      <input id="target.classes.test.dir" policy="conditional"/>
      <input id="target.classes.main.dir"/>
    </consumes>
    <produces id="target.reports.test.dir"/>
  </process>
  
  <process name="jar" class="net.dpml.tools.process.JarProcess">
    <dependencies>
      <include id="junit"/>
    </dependencies>
    <consumes>
      <input id="target.build.main.dir" policy="conditional"/>
    </consumes>
    <produces id="target.deliverables.jar"/>
  </process>
  
  <process name="rmic" class="net.dpml.tools.process.RMICProcess">
    <dependencies>
      <include id="compile-main"/>
    </dependencies>
    <consumes>
      <input id="target.classes.main.dir" policy="conditional"/>
    </consumes>
  </process>
  
  <process name="part" class="net.dpml.tools.process.PartProcess">
    <consumes>
      <input id="target.classes.main.dir"/>
    </consumes>
    <produces id="target.deliverables.part"/>
  </process>
  
</configuration>
