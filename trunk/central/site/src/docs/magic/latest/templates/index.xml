<?xml version="1.0" encoding="ISO-8859-1"?>

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <title>DPML Magic</title>
  </properties> 

  <body>

    <section name="Build Templates">

      <p>
      Templates provide a convinient framework for the automation of 
      Ant build procedures.  Templates may be imported into a build file
      using the Transit import task as show in the example below.
      </p>

      <subsection name="Available Templates">

        <table>
          <tr>
            <td><a href="standard.html">standard</a></td>
            <td>Generic building of a resource.</td>
          </tr>
          <tr>
            <td><a href="reactor.html">reactor</a></td>
            <td>Builds all projects defined at or below the current
                directory taking into account inter-project dependencies.</td>
          </tr>
        </table>

      </subsection>

      <subsection name="Example Ant Build File">
<source><![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>

<project name="dpml-logging-api" default="install" basedir="." 
    xmlns:transit="antlib:net.dpml.transit" >

  <transit:import uri="artifact:template:dpml/magic/standard"/>

</project>
]]></source>

        <p>
        In the above example the template file is loaded using a uri 
        identifying the template resource.  The template establishes a 
        default build framework that covers code preparation, building, 
        packaging, testing, and content installation into a local 
        resource cache.
        </p>

        <p><i>Output from ant when building the above project:</i></p>

<pre>
$ ant
Buildfile: build.xml

Assigning Transit component helper to project: C:\dev\dpml\trunk\main\metro\logging
Overriding previous definition of reference to ant.ComponentHelper

info:
installing plugin: plugin:dpml/magic/dpml-magic-core / artifact:plugin:dpml/magic/dpml-magic-core#SNAPSHOT:info
------------------------------------------------------------------------
key: dpml-logging-api
------------------------------------------------------------------------

init:

prepare:
[x:prepare] Created dir: C:\dev\dpml\trunk\main\metro\logging\target
[x:prepare] Created dir: C:\dev\dpml\trunk\main\metro\logging\target\test
[x:prepare] Created dir: C:\dev\dpml\trunk\main\metro\logging\target\build\main
[x:prepare] Copying 1 file to C:\dev\dpml\trunk\main\metro\logging\target\build\main
[x:prepare] Copying 1 file to C:\dev\dpml\trunk\main\metro\logging\target\build\main

build:
  [x:javac] Created dir: C:\dev\dpml\trunk\main\metro\logging\target\classes
  [x:javac] Compiling 1 source file to C:\dev\dpml\trunk\main\metro\logging\target\classes

package:
    [x:jar] Created dir: C:\dev\dpml\trunk\main\metro\logging\target\deliverables\jars
    [x:jar] Building jar: C:\dev\dpml\trunk\main\metro\logging\target\deliverables\jars\dpml-logging-api-SNAPSHOT.jar
    [x:jar] Creating md5 checksum

test:

install:
[x:install] Copying 2 files to C:\osm\Data\cache\dpml\metro

BUILD SUCCESSFUL
Total time: 2 seconds
$
</pre>
      </subsection>

    </section>

  </body>

</document>

