<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
 Copyright 2004-2006 Stephen McConnell
 Copyright 2004 Niclas Hedhman
 Copyright 2005 David Leangen

 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at

   http://www.dpml.net/central/about/legal/

 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.

 See the License for the specific language governing permissions and
 limitations under the License.
-->

<document>
  <properties>
    <author email="mcconnell@dpml.net">Stephen McConnell</author>
    <author email="niclas@hedhman.org">Niclas Hedhman</author>
    <author email="david.leangen@konova.com">David Leangen</author>
    <title>DPML Transit Concepts</title>
  </properties>

  <body verified="true">

    <section name="DPML Transit">

      <pre>@TRANSIT-HANDLER-URI@</pre>

      <p>
        Transit provides a flexible framework for dynamically 
        retrieving system and application resources, constructing 
        classloaders and management of plugins via 
        an abstract resource identifier referred to as an artifact.
        As a resource management system Transit provides the foundation
        for building repository-enabled applications.
      </p>

      <img src="/images/transit/repositories.png"/>

      <p>
        One of the more difficult tasks when building Java applications
        is classloader management. Often, when combining various projects 
        together into an enterprise application, the application is not 
        able to load the right classes at the right time, causing the 
        application to fail in mysterious and sometimes subtle
        ways. Although a fundamental issue, classloading has remained
        a rather obscure topic. When combined with component-based 
        development the classloader management concern can become a major 
        configuration management concern.
        Transit provides a solution to this problem.
      </p>

      <p>
        At the core of Transit is a URL protocol handler and a framework
        for custom content handlers.  Content handlers provided by DPML
        include a deployment system that encapsulates a classloader defintion
        and deployment strategy, together with a handler supporting the 
        establishment of a Java runtime process.
        
        Based on these, Transit is able to manage classloaders, not only
        effectively and nearly invisible to the casual user, but in a location
        independent way. That means, applications don't need to be concerned over
        where the jars and other resources are located, whether on the local file
        system, on LAN servers or somewhere on the Internet.
        This allows an application to provide extendability, hot-redeployment
        and more advanced services.
      </p>

    </section>

  </body>

</document>

